
const digits = [
    //digit0
    [0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 
    0, 0, 1, 1, 0,
    0, 0, 1, 1, 0,
    0, 0, 0, 0, 0,
    0, 0, 0, 0, 0,
    0, 0, 0, 0, 0],
    //digit1
    [0, 0, 0, 0, 0,
    0, 0, 1, 0, 0, 
    0, 0, 1, 0, 0,
    0, 0, 1, 0, 0,
    0, 0, 1, 0, 0,
    0, 0, 1, 0, 0,
    0, 0, 0, 0, 0],
    //digit2
    [0, 0, 0, 0, 0,
    1, 0, 0, 1, 0, 
    1, 1, 1, 0, 0,
    1, 0, 0, 0, 0,
    1, 0, 0, 0, 0,
    1, 0, 0, 0, 0,
    0, 0, 0, 0, 0],
    //digit3
    [0, 0, 0, 0, 0,
    1, 0, 1, 0, 1, 
    1, 1, 0, 1, 0,
    1, 0, 0, 0, 0,
    1, 0, 0, 0, 0,
    1, 0, 0, 0, 0,
    0, 0, 0, 0, 0],
    //digit4
    [0, 0, 0, 0, 0,
    0, 1, 1, 1, 1, 
    0, 0, 1, 0, 0,
    0, 0, 0, 1, 0,
    0, 0, 1, 0, 0,
    0, 1, 0, 0, 0,
    0, 1, 1, 1, 1],
    //digit5
    [0, 0, 0, 0, 0,
    0, 0, 1, 0, 0, 
    0, 1, 0, 1, 0,
    1, 0, 0, 0, 1,
    1, 0, 0, 0, 1,
    1, 0, 0, 0, 1,
    0, 1, 1, 1, 0],
    //digit6
    [0, 0, 0, 0, 0,
    0, 1, 0, 0, 1, 
    0, 0, 1, 1, 1,
    0, 0, 0, 0, 1,
    0, 0, 0, 0, 1,
    0, 0, 0, 0, 1,
    0, 0, 0, 0, 0],
    //digit7
    [0, 0, 0, 0, 0,
    1, 0, 0, 0, 1, 
    1, 0, 0, 1, 0,
    1, 0, 1, 0, 0,
    1, 1, 0, 0, 0,
    1, 0, 0, 0, 0,
    0, 0, 0, 0, 0],
    //digit8
    [0, 0, 0, 0, 0,
    0, 0, 0, 0, 1, 
    0, 0, 0, 1, 1,
    0, 0, 1, 0, 1,
    0, 1, 0, 0, 1,
    1, 0, 0, 0, 1,
    0, 0, 0, 0, 0],
    //digit9
    [0, 0, 0, 0, 0,
    0, 0, 1, 1, 0, 
    0, 1, 0, 0, 1,
    0, 0, 1, 1, 1,
    0, 0, 0, 0, 1,
    0, 0, 0, 0, 1,
    0, 0, 0, 0, 0]
];
// const digit0 = [
//     0, 0, 0, 0, 0,
//     0, 0, 0, 0, 0, 
//     0, 0, 1, 1, 0,
//     0, 0, 1, 1, 0,
//     0, 0, 0, 0, 0,
//     0, 0, 0, 0, 0,
//     0, 0, 0, 0, 0,
// ];
// const digit1 = [
//     0, 0, 0, 0, 0,
//     0, 0, 1, 0, 0, 
//     0, 0, 1, 0, 0,
//     0, 0, 1, 0, 0,
//     0, 0, 1, 0, 0,
//     0, 0, 1, 0, 0,
//     0, 0, 0, 0, 0,
// ];
// const digit2 = [
//     0, 0, 0, 0, 0,
//     1, 0, 0, 1, 0, 
//     1, 1, 1, 0, 0,
//     1, 0, 0, 0, 0,
//     1, 0, 0, 0, 0,
//     1, 0, 0, 0, 0,
//     0, 0, 0, 0, 0,
// ];
// const digit3 = [
//     0, 0, 0, 0, 0,
//     1, 0, 1, 0, 1, 
//     1, 1, 0, 1, 0,
//     1, 0, 0, 0, 0,
//     1, 0, 0, 0, 0,
//     1, 0, 0, 0, 0,
//     0, 0, 0, 0, 0,
// ];
// const digit4 = [
//     0, 0, 0, 0, 0,
//     0, 1, 1, 1, 1, 
//     0, 0, 1, 0, 0,
//     0, 0, 0, 1, 0,
//     0, 0, 1, 0, 0,
//     0, 1, 0, 0, 0,
//     0, 1, 1, 1, 1,
// ];
// const digit5 = [
//     0, 0, 0, 0, 0,
//     0, 0, 1, 0, 0, 
//     0, 1, 0, 1, 0,
//     1, 0, 0, 0, 1,
//     1, 0, 0, 0, 1,
//     1, 0, 0, 0, 1,
//     0, 1, 1, 1, 0,
// ];
// const digit6 = [
//     0, 0, 0, 0, 0,
//     0, 1, 0, 0, 1, 
//     0, 0, 1, 1, 1,
//     0, 0, 0, 0, 1,
//     0, 0, 0, 0, 1,
//     0, 0, 0, 0, 1,
//     0, 0, 0, 0, 0,
// ];
// const digi7 = [
//     0, 0, 0, 0, 0,
//     1, 0, 0, 0, 1, 
//     1, 0, 0, 1, 0,
//     1, 0, 1, 0, 0,
//     1, 1, 0, 0, 0,
//     1, 0, 0, 0, 0,
//     0, 0, 0, 0, 0,
// ];
// const digit8 = [
//     0, 0, 0, 0, 0,
//     0, 0, 0, 0, 1, 
//     0, 0, 0, 1, 1,
//     0, 0, 1, 0, 1,
//     0, 1, 0, 0, 1,
//     1, 0, 0, 0, 1,
//     0, 0, 0, 0, 0,
// ];
// const digit9 = [
//     0, 0, 0, 0, 0,
//     0, 0, 1, 1, 0, 
//     0, 1, 0, 0, 1,
//     0, 0, 1, 1, 1,
//     0, 0, 0, 0, 1,
//     0, 0, 0, 0, 1,
//     0, 0, 0, 0, 0,
// ];



class Digit{  
    constructor(value, noise) {
        this.value = value;
        this.noise = noise;
        this.pixels = [];
        this.fill_pixels();
    }

    fill_pixels(){
        //shallow cloning
        this.pixels = [...digits[this.value]];
        //implementing errors later

    }

}

class Network{

    constructor() {
        this.training_data_size = 2;
        this.training_set = [];  //of digits
        console.log("helloooo");

        this.generate_training_data();



    }

    generate_training_data(){

        for(var n = 0; n < 10; n++){
            for(var i = 0; i < this.training_data_size; i++){
                console.log("value: " + n);
                this.training_set.push(new Digit(n, false)); 
            }
        }
        
        console.log(this.training_set);
    }


    train(){

    }



}
